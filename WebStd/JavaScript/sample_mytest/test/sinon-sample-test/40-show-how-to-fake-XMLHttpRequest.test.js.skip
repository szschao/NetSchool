describe.skip('401 - show how to fake XMLHttpRequest', function () {

    before(function () {
        this.xhr = sinon.useFakeXMLHttpRequest();
        const requests = this.requests = [];

        this.xhr.onCreate = function (xhr) {
            requests.push(xhr);
        };
    });

    after(function () {
        this.xhr.restore();
    });

    const myLib = {
        getCommentsFor: function (url,callback) {
            const http = new XMLHttpRequest();
            http.onreadystatechange = function () {
                callback();
            };
            http.open("GET",url,true);
            http.send();

            //$.ajax({url:"/jquery/test1.txt",async:false});
        }
    };

    it("test should fetch comments from server", function () {
        const callback = sinon.spy();

        myLib.getCommentsFor("/some/article", callback);
        expect(this.requests.length).to.equal(1);
        //assertEquals(1, this.requests.length);

        //this.requests[0].respond(
        //    200,
        //    {"Content-Type": "application/json"},
        //    '[{ "id": 12, "comment": "Hey there" }]');

        //assert(callback.calledWith([{id: 12, comment: "Hey there"}]));
    })
});

