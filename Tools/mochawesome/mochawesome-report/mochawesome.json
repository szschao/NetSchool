{
  "stats": {
    "suites": 4,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2017-09-06T03:41:34.203Z",
    "end": "2017-09-06T03:41:34.223Z",
    "duration": 20,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "should be passed test",
        "suites": [
          {
            "title": "#indexOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "should be passed test #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "[1,2,3].indexOf(5).should.equal(-1);\n[1,2,3].indexOf(0).should.equal(-1);",
                "err": {},
                "isRoot": false,
                "uuid": "e6f1b08b-9f88-4370-855a-1fe4bcac3e55",
                "parentUUID": "ad0f8ffe-5e13-41b9-b56f-e28d51655b7d",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\001-should-be-passed.test.js",
            "uuid": "ad0f8ffe-5e13-41b9-b56f-e28d51655b7d",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "F:\\GitHub\\NetSchool\\Tools\\mochawesome\\test\\001-should-be-passed.test.js",
            "passes": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "should be passed test #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "[1,2,3].indexOf(5).should.equal(-1);\n[1,2,3].indexOf(0).should.equal(-1);",
                "err": {},
                "isRoot": false,
                "uuid": "e6f1b08b-9f88-4370-855a-1fe4bcac3e55",
                "parentUUID": "ad0f8ffe-5e13-41b9-b56f-e28d51655b7d",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\001-should-be-passed.test.js",
        "uuid": "b2dd3e95-a526-4aac-ac9e-a3d4496161a2",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\GitHub\\NetSchool\\Tools\\mochawesome\\test\\001-should-be-passed.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "test suite",
        "suites": [],
        "tests": [
          {
            "title": "should add context",
            "fullTitle": "test suite should add context",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"simple string\",\n  \"http://www.url.com/pathname\",\n  {\n    \"title\": \"How I Feel When Tests Fail:\",\n    \"value\": \"../img/whenTestFail.png\"\n  },\n  {\n    \"title\": \"expected output\",\n    \"value\": {\n      \"a\": 1,\n      \"b\": \"2\",\n      \"c\": \"d\"\n    }\n  }\n]",
            "code": "// context can be a simple string\naddContext(this, 'simple string');\n// context can be a url and the report will create a link\naddContext(this, 'http://www.url.com/pathname');\n// context can be an image url and the report will show it inline\naddContext(this, {\n    title:'How I Feel When Tests Fail:',\n    value:'../img/whenTestFail.png'\n});\n// context can be an object with title and value properties\naddContext(this, {\n    title: 'expected output',\n    value: {\n        a: 1,\n        b: '2',\n        c: 'd'\n    }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b9eb752e-90bf-41b9-a4e8-49fdaf65c734",
            "parentUUID": "baee5b87-23f0-4a09-970d-b530b4f1221e",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\001-should-be-passed.test.js",
        "uuid": "baee5b87-23f0-4a09-970d-b530b4f1221e",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "F:\\GitHub\\NetSchool\\Tools\\mochawesome\\test\\001-should-be-passed.test.js",
        "passes": [
          {
            "title": "should add context",
            "fullTitle": "test suite should add context",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"simple string\",\n  \"http://www.url.com/pathname\",\n  {\n    \"title\": \"How I Feel When Tests Fail:\",\n    \"value\": \"../img/whenTestFail.png\"\n  },\n  {\n    \"title\": \"expected output\",\n    \"value\": {\n      \"a\": 1,\n      \"b\": \"2\",\n      \"c\": \"d\"\n    }\n  }\n]",
            "code": "// context can be a simple string\naddContext(this, 'simple string');\n// context can be a url and the report will create a link\naddContext(this, 'http://www.url.com/pathname');\n// context can be an image url and the report will show it inline\naddContext(this, {\n    title:'How I Feel When Tests Fail:',\n    value:'../img/whenTestFail.png'\n});\n// context can be an object with title and value properties\naddContext(this, {\n    title: 'expected output',\n    value: {\n        a: 1,\n        b: '2',\n        c: 'd'\n    }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b9eb752e-90bf-41b9-a4e8-49fdaf65c734",
            "parentUUID": "baee5b87-23f0-4a09-970d-b530b4f1221e",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "test suite",
        "suites": [],
        "tests": [
          {
            "title": "should display with beforeEach and afterEach context",
            "fullTitle": "test suite should display with beforeEach and afterEach context",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"some context\",\n  {\n    \"title\": \"afterEach context\",\n    \"value\": {\n      \"a\": 1\n    }\n  }\n]",
            "code": "// assert something",
            "err": {},
            "isRoot": false,
            "uuid": "3fb71ab1-18cf-49c1-907c-35f355ee31a2",
            "parentUUID": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\001-should-be-passed.test.js",
        "uuid": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "test suite \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "addContext(this, 'some context')",
            "err": {},
            "isRoot": false,
            "uuid": "347d999e-d60e-4873-8538-ff45e89662d7",
            "parentUUID": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "test suite \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "addContext(this, {\n    title: 'afterEach context',\n    value: { a: 1 }\n});",
            "err": {},
            "isRoot": false,
            "uuid": "23e272e2-982f-46fc-8f25-19a0427d5d9d",
            "parentUUID": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
            "isHook": true,
            "skipped": false
          }
        ],
        "fullFile": "F:\\GitHub\\NetSchool\\Tools\\mochawesome\\test\\001-should-be-passed.test.js",
        "passes": [
          {
            "title": "should display with beforeEach and afterEach context",
            "fullTitle": "test suite should display with beforeEach and afterEach context",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "[\n  \"some context\",\n  {\n    \"title\": \"afterEach context\",\n    \"value\": {\n      \"a\": 1\n    }\n  }\n]",
            "code": "// assert something",
            "err": {},
            "isRoot": false,
            "uuid": "3fb71ab1-18cf-49c1-907c-35f355ee31a2",
            "parentUUID": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 10,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "7e7bf43e-a42e-4480-ba39-9f4f96d92674",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return -1 when the value is not present",
      "fullTitle": "#indexOf() should return -1 when the value is not present",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "[1,2,3].indexOf(5).should.equal(-1);\n[1,2,3].indexOf(0).should.equal(-1);",
      "err": {},
      "isRoot": false,
      "uuid": "e6f1b08b-9f88-4370-855a-1fe4bcac3e55",
      "parentUUID": "ad0f8ffe-5e13-41b9-b56f-e28d51655b7d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should add context",
      "fullTitle": "test suite should add context",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"simple string\",\n  \"http://www.url.com/pathname\",\n  {\n    \"title\": \"How I Feel When Tests Fail:\",\n    \"value\": \"../img/whenTestFail.png\"\n  },\n  {\n    \"title\": \"expected output\",\n    \"value\": {\n      \"a\": 1,\n      \"b\": \"2\",\n      \"c\": \"d\"\n    }\n  }\n]",
      "code": "// context can be a simple string\naddContext(this, 'simple string');\n// context can be a url and the report will create a link\naddContext(this, 'http://www.url.com/pathname');\n// context can be an image url and the report will show it inline\naddContext(this, {\n    title:'How I Feel When Tests Fail:',\n    value:'../img/whenTestFail.png'\n});\n// context can be an object with title and value properties\naddContext(this, {\n    title: 'expected output',\n    value: {\n        a: 1,\n        b: '2',\n        c: 'd'\n    }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b9eb752e-90bf-41b9-a4e8-49fdaf65c734",
      "parentUUID": "baee5b87-23f0-4a09-970d-b530b4f1221e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display with beforeEach and afterEach context",
      "fullTitle": "test suite should display with beforeEach and afterEach context",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"some context\",\n  {\n    \"title\": \"afterEach context\",\n    \"value\": {\n      \"a\": 1\n    }\n  }\n]",
      "code": "// assert something",
      "err": {},
      "isRoot": false,
      "uuid": "3fb71ab1-18cf-49c1-907c-35f355ee31a2",
      "parentUUID": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return -1 when the value is not present",
      "fullTitle": "#indexOf() should return -1 when the value is not present",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "[1,2,3].indexOf(5).should.equal(-1);\n[1,2,3].indexOf(0).should.equal(-1);",
      "err": {},
      "isRoot": false,
      "uuid": "e6f1b08b-9f88-4370-855a-1fe4bcac3e55",
      "parentUUID": "ad0f8ffe-5e13-41b9-b56f-e28d51655b7d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should add context",
      "fullTitle": "test suite should add context",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"simple string\",\n  \"http://www.url.com/pathname\",\n  {\n    \"title\": \"How I Feel When Tests Fail:\",\n    \"value\": \"../img/whenTestFail.png\"\n  },\n  {\n    \"title\": \"expected output\",\n    \"value\": {\n      \"a\": 1,\n      \"b\": \"2\",\n      \"c\": \"d\"\n    }\n  }\n]",
      "code": "// context can be a simple string\naddContext(this, 'simple string');\n// context can be a url and the report will create a link\naddContext(this, 'http://www.url.com/pathname');\n// context can be an image url and the report will show it inline\naddContext(this, {\n    title:'How I Feel When Tests Fail:',\n    value:'../img/whenTestFail.png'\n});\n// context can be an object with title and value properties\naddContext(this, {\n    title: 'expected output',\n    value: {\n        a: 1,\n        b: '2',\n        c: 'd'\n    }\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b9eb752e-90bf-41b9-a4e8-49fdaf65c734",
      "parentUUID": "baee5b87-23f0-4a09-970d-b530b4f1221e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should display with beforeEach and afterEach context",
      "fullTitle": "test suite should display with beforeEach and afterEach context",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"some context\",\n  {\n    \"title\": \"afterEach context\",\n    \"value\": {\n      \"a\": 1\n    }\n  }\n]",
      "code": "// assert something",
      "err": {},
      "isRoot": false,
      "uuid": "3fb71ab1-18cf-49c1-907c-35f355ee31a2",
      "parentUUID": "b6d4ae94-42a1-412e-a6d9-4d02fd5a184c",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}